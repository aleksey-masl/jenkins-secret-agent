//node {
//    env.NODEJS_HOME = "${tool 'basic_node'}"
//    // on linux / mac
//    env.PATH="${env.NODEJS_HOME}/bin:${env.PATH}"
//    sh 'npm --version'
//}

pipeline {
    agent none
    environment {
        NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
        REPO = "alekseymasl"
    }
    stages {
        stage('build') {
            agent{
                docker {image 'node:8.9-alpine'}
            }
            steps {
                git branch: 'main',
                    url: 'https://github.com/aleksey-masl/jenkins-secret-agent.git'
                sh "npm install"
            }
        }
        stage('test') {
            agent{
                docker {image 'node:8.9-alpine'}
            }
            steps {
            script {
                    env.SECRET_AGENT_PORT = "3060"
                    echo "SECRET_AGENT_PORT is '${SECRET_AGENT_PORT}'"
                }
                sh "npm test"
            }
        }
        stage('release') {
            agent{
                label 'linux'
            }
            steps {
            script {
                env.SECRET_AGENT_PORT = "3050"
                echo "SECRET_AGENT_PORT is '${SECRET_AGENT_PORT}'"
            }
            withCredentials([usernamePassword(credentialsId: 'dockerhub',
                    passwordVariable: 'dockerhubPassword', usernameVariable: 'dockerhubUser')]) {
            // If thAe local registry container does not exists, create it
            sh "id"
            sh """ if ! [ \$(docker ps --format '{{.Names}}' | grep -w registry &> /dev/null) ]; then
                     docker run -d --network='host' -p 5000:5000 --restart=always --name registry registry:2;
                   fi;
                """
            // if the secret_agent container is running, delete it in order to create a new one
            sh """ if [ \$(docker ps --format '{{.Names}}' | grep -w secret_agent &> /dev/null) ]; then
                     docker rm -f secret_agent;
                   fi;
                """
            sh ''' 
            docker build -t ${REPO}/secretagent:v1 .
            docker login -u '${env.dockerhubUser}' -p '${env.dockerhubPassword}'
            docker push ${REPO}/secretagent:v1
            docker tag ${REPO}/secretagent:v1 localhost:5000/secretagent:v1
            docker push localhost:5000/secretagent:v1
            docker run -dp 3050:3050 --name secret_agent --restart=always localhost:5000/secretagent:v1
            echo "Secret Agent up and running on port 3050" '''}
            }               
        }
    }
}
